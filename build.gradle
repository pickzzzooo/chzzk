plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Shadow Plugin 추가
}

group = 'com'
version = '1.241122'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    implementation 'net.kyori:adventure-api:4.14.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.google.code.gson:gson:2.9.0'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8" // 소스 코드 인코딩을 UTF-8로 설정
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8' // 리소스 파일 필터링 시 UTF-8 사용
    filesMatching('plugin.yml') {
        expand props
    }
}

// 플러그인 JAR에 외부 라이브러리 병합
tasks.named('shadowJar') {
    archiveBaseName.set('chzzk')
    archiveClassifier.set('') // 추가적인 구분자 제거 (클래식 JAR 이름 사용)
    archiveVersion.set(version)
    doFirst {
        println("Shadow JAR 생성 중...")
    }
    doLast {
        println("Shadow JAR 생성 완료.")
    }
}

// 플러그인 경로 지정
tasks.register("copyToServer", Copy) {
    def serverPluginsFolder = file("C:/Users/test2/Desktop/minecraft/현재진행중인_프로젝트/치지직_1.21.1/테스트서버/plugins")
    from("${buildDir}/libs") // 빌드된 JAR 파일 위치
    include("*.jar") // 복사할 파일 형식
    into(serverPluginsFolder) // 복사 대상 경로

    doFirst {
        println("복사를 시작합니다. 대상 경로: ${serverPluginsFolder}")
    }

    doLast {
        println("복사가 완료되었습니다.")
    }
}

// 빌드 후 ShadowJar 실행 및 복사 작업 자동화
tasks.named("build") {
    dependsOn("shadowJar")
    finalizedBy("copyToServer")
}
