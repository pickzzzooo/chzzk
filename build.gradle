plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com'
version = '0.0529'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    implementation 'net.kyori:adventure-api:4.14.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation("io.github.R2turnTrue:chzzk4j:0.0.12")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.named("jar") {
    enabled = false
    dependsOn.clear()
    actions.clear()
}

// Shadow JAR 설정
tasks.named('shadowJar') {
    archiveBaseName.set('chzzk')
    archiveClassifier.set('')
    archiveVersion.set(version)
    doFirst {
        println("Shadow JAR 생성 중...")
    }
    doLast {
        println("Shadow JAR 생성 완료.")
    }
}

// 서버 플러그인 폴더로 자동 복사
tasks.register("copyToServer", Copy) {
    def serverPluginsFolder = file("C:/Users/test2/Desktop/minecraft/현재진행중인_프로젝트/다이아룰렛_1.20.1/서버/plugins")
    from("${buildDir}/libs")
    include("*.jar")
    into(serverPluginsFolder)
    doFirst {
        println("복사를 시작합니다. 대상 경로: ${serverPluginsFolder}")
    }
    doLast {
        println("복사가 완료되었습니다.")
    }
}

// 빌드 시 ShadowJar + 복사 실행
tasks.named("build") {
    dependsOn("shadowJar")
    finalizedBy("copyToServer")
}
